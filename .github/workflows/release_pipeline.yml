---
  name: Release pipeline

  on:
      workflow_dispatch:

  jobs:
      release:
          runs-on: ubuntu-latest
          permissions:
              contents: write
              id-token: write
          steps:
              - uses: actions/checkout@v4

              - name: Install uv
                uses: astral-sh/setup-uv@v4

              - name: Set up Python
                run: uv python install

              - name: Install package
                run: uv venv && source .venv/bin/activate && make install

              - name: Get version
                id: version
                run: |
                  export VERSION=$(uv run download_artifacts --version)
                  echo "VERSION=$VERSION" >> $GITHUB_ENV
                  echo "VERSION: $VERSION"
                  echo "version=$(echo $VERSION)" >> $GITHUB_OUTPUT
                  echo "major=$(echo $(echo $VERSION | cut -d '.' -f 1))" >> $GITHUB_OUTPUT
                  echo "minor=$(echo $(echo $VERSION | cut -d '.' -f 2))" >> $GITHUB_OUTPUT
                  echo "patch=$(echo $(echo $VERSION | cut -d '.' -f 3))" >> $GITHUB_OUTPUT

              - name: Build whl file
                run: uv build

              - name: Tag commit and push
                run: |
                  git config --global user.email "bot@github.com"
                  git config --global user.name "github-actions[bot]"

                  # Tag and push X.X.X
                  git tag -f \
                    -a v${{ steps.version.outputs.version }} \
                    -m "v${{ steps.version.outputs.version }}"
                  git push -f origin "v${{ steps.version.outputs.version }}"

                  # Tag and push X.X
                  git tag -f \
                    -a v${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }} \
                    -m "v${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}"
                  git push -f origin "v${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}"

                  # Tag and push X.X.X
                  git tag -f \
                    -a v${{ steps.version.outputs.major }} \
                    -m "v${{ steps.version.outputs.major }}"
                  git push -f origin "v${{ steps.version.outputs.major }}"

              - name: Create release
                env:
                    GH_TOKEN: ${{ secrets.PAT_GITHUB }}
                run: |
                    export LAST_RELEASE=$(gh release list --repo ${{ github.repository }} --order desc --json name --limit 1 | jq -r '.[0].name')
                    echo $LAST_RELEASE
                    gh release create v${{ steps.version.outputs.version }} \
                        --generate-notes \
                        --repo ${{ github.repository }} \
                        --notes-start-tag $LAST_RELEASE \
                        --target main \
                        --title "v${{ steps.version.outputs.version }}" \
                        --latest

              - name: Upload .whl to release
                env:
                    GH_TOKEN: ${{ github.token }}
                run: gh release upload v${{ steps.version.outputs.version }} ./dist/*.whl
